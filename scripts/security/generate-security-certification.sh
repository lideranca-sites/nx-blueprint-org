#!/usr/bin/env bash
set -e

# Script para gerar certifica√ß√£o de seguran√ßa para componentes
# Uso: ./scripts/security/generate-security-certification.sh <component-name> <component-type> <priority>
#
# Exemplo: ./scripts/security/generate-security-certification.sh LoggerService software critical

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly WORKSPACE_ROOT="$(cd "${SCRIPT_DIR}/../.." && pwd)"

# Cores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() { echo -e "${BLUE}‚ÑπÔ∏è  $*${NC}"; }
log_success() { echo -e "${GREEN}‚úÖ $*${NC}"; }
log_error() { echo -e "${RED}‚ùå $*${NC}" >&2; }
log_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $*${NC}"; }

# Valida√ß√£o de par√¢metros
if [[ $# -ne 3 ]]; then
  log_error "Uso: $0 <component-name> <component-type> <priority>"
  log_error "Exemplo: $0 LoggerService software critical"
  log_error ""
  log_error "Tipos v√°lidos: software, api, infrastructure, data"
  log_error "Prioridades v√°lidas: critical, high, medium, low"
  exit 1
fi

readonly COMPONENT_NAME="$1"
readonly COMPONENT_TYPE="$2"
readonly PRIORITY="$3"

# Valida√ß√£o de tipos
case "${COMPONENT_TYPE}" in
  software|api|infrastructure|data)
    ;;
  *)
    log_error "Tipo inv√°lido: ${COMPONENT_TYPE}"
    log_error "Tipos v√°lidos: software, api, infrastructure, data"
    exit 1
    ;;
esac

# Valida√ß√£o de prioridades
case "${PRIORITY}" in
  critical|high|medium|low)
    ;;
  *)
    log_error "Prioridade inv√°lida: ${PRIORITY}"
    log_error "Prioridades v√°lidas: critical, high, medium, low"
    exit 1
    ;;
esac

# Configura√ß√£o de caminhos
readonly TEMPLATE_FILE="${WORKSPACE_ROOT}/docs/templates/SECURITY_CERTIFICATION_TASK_TEMPLATE.md"
readonly OUTPUT_DIR="${WORKSPACE_ROOT}/docs/certificates"
readonly OUTPUT_FILE="${OUTPUT_DIR}/${COMPONENT_NAME}_CERTIFICATION.md"

# Validar que template existe
if [[ ! -f "${TEMPLATE_FILE}" ]]; then
  log_error "Template n√£o encontrado: ${TEMPLATE_FILE}"
  exit 1
fi

# Criar diret√≥rio de sa√≠da se n√£o existir
mkdir -p "${OUTPUT_DIR}"

log_info "Gerando certifica√ß√£o para componente: ${COMPONENT_NAME}"
log_info "Tipo: ${COMPONENT_TYPE}"
log_info "Prioridade: ${PRIORITY}"

# Gerar data atual
readonly CURRENT_DATE=$(date +"%Y-%m-%d")
readonly CERTIFICATION_ID="CERT-$(date +"%Y%m%d")-$(echo "${COMPONENT_NAME}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-')"

# Gerar certifica√ß√£o baseada no template
cat > "${OUTPUT_FILE}" << EOF
# Certifica√ß√£o de Seguran√ßa - ${COMPONENT_NAME}

## Informa√ß√µes Gerais

**ID da Certifica√ß√£o:** ${CERTIFICATION_ID}  
**Componente:** ${COMPONENT_NAME}  
**Tipo:** ${COMPONENT_TYPE}  
**Prioridade:** ${PRIORITY}  
**Data de Cria√ß√£o:** ${CURRENT_DATE}  
**Status:** üîÑ **EM DESENVOLVIMENTO**

---

## üìã **Checklist de Seguran√ßa**

### **Autentica√ß√£o e Autoriza√ß√£o**
- [ ] Implementa√ß√£o de autentica√ß√£o robusta
- [ ] Controle de acesso baseado em roles (RBAC)
- [ ] Valida√ß√£o de tokens e sess√µes
- [ ] Logout seguro e invalida√ß√£o de sess√µes

### **Valida√ß√£o de Entrada**
- [ ] Sanitiza√ß√£o de dados de entrada
- [ ] Valida√ß√£o de tipos e formatos
- [ ] Prote√ß√£o contra injection attacks
- [ ] Rate limiting implementado

### **Criptografia**
- [ ] Dados sens√≠veis criptografados em tr√¢nsito (TLS/SSL)
- [ ] Dados sens√≠veis criptografados em repouso
- [ ] Uso de algoritmos criptogr√°ficos seguros
- [ ] Gerenciamento seguro de chaves

### **Logging e Monitoramento**
- [ ] Logs estruturados implementados
- [ ] Logs sem exposi√ß√£o de dados sens√≠veis
- [ ] Monitoramento de eventos de seguran√ßa
- [ ] Alertas configurados para anomalias

### **Tratamento de Erros**
- [ ] Mensagens de erro n√£o exp√µem informa√ß√µes sens√≠veis
- [ ] Logs de erro estruturados
- [ ] Tratamento adequado de exce√ß√µes
- [ ] Fallbacks seguros implementados

### **Depend√™ncias**
- [ ] Depend√™ncias atualizadas e sem vulnerabilidades conhecidas
- [ ] Auditoria de depend√™ncias realizada
- [ ] Depend√™ncias de desenvolvimento exclu√≠das da produ√ß√£o
- [ ] Verifica√ß√£o de integridade de pacotes

---

## üß™ **Testes de Seguran√ßa**

### **Testes Automatizados**
- [ ] Testes unit√°rios de seguran√ßa implementados
- [ ] Testes de integra√ß√£o com foco em seguran√ßa
- [ ] Testes de penetra√ß√£o automatizados
- [ ] Valida√ß√£o de configura√ß√µes de seguran√ßa

### **Testes Manuais**
- [ ] Revis√£o de c√≥digo focada em seguran√ßa
- [ ] Testes de penetra√ß√£o manuais
- [ ] Valida√ß√£o de configura√ß√µes de produ√ß√£o
- [ ] Testes de cen√°rios de ataque

---

## üìä **M√©tricas de Seguran√ßa**

### **Cobertura de Testes**
- **Unit√°rios:** [ ]% (Meta: ‚â•80%)
- **Integra√ß√£o:** [ ]% (Meta: ‚â•70%)
- **E2E:** [ ]% (Meta: ‚â•60%)

### **Vulnerabilidades**
- **Cr√≠ticas:** 0 (Meta: 0)
- **Altas:** 0 (Meta: 0)
- **M√©dias:** 0 (Meta: ‚â§2)
- **Baixas:** 0 (Meta: ‚â§5)

### **Depend√™ncias**
- **Total:** [ ] (Meta: ‚â§50)
- **Com vulnerabilidades:** 0 (Meta: 0)
- **Desatualizadas:** [ ] (Meta: ‚â§10%)

---

## üîç **Auditoria e Revis√£o**

### **Revis√£o T√©cnica**
- [ ] Revis√£o de c√≥digo por pares
- [ ] Revis√£o de arquitetura de seguran√ßa
- [ ] Valida√ß√£o de padr√µes de seguran√ßa
- [ ] Aprova√ß√£o de security specialist

### **Documenta√ß√£o**
- [ ] Documenta√ß√£o de seguran√ßa atualizada
- [ ] Procedimentos de resposta a incidentes
- [ ] Guias de troubleshooting
- [ ] Runbooks operacionais

---

## üìÖ **Cronograma**

### **Fase 1: Implementa√ß√£o** (Semana 1-2)
- [ ] Implementa√ß√£o de controles de seguran√ßa b√°sicos
- [ ] Configura√ß√£o de autentica√ß√£o e autoriza√ß√£o
- [ ] Implementa√ß√£o de logging estruturado

### **Fase 2: Testes** (Semana 3)
- [ ] Execu√ß√£o de testes de seguran√ßa
- [ ] Corre√ß√£o de vulnerabilidades identificadas
- [ ] Valida√ß√£o de configura√ß√µes

### **Fase 3: Certifica√ß√£o** (Semana 4)
- [ ] Auditoria final de seguran√ßa
- [ ] Aprova√ß√£o de certifica√ß√£o
- [ ] Documenta√ß√£o final

---

## ‚úÖ **Aprova√ß√£o**

### **Respons√°veis**
- **Desenvolvedor:** [Nome do desenvolvedor]
- **Tech Lead:** [Nome do tech lead]
- **Security Specialist:** [Nome do security specialist]

### **Assinaturas**
- [ ] Desenvolvedor: _________________ Data: _______
- [ ] Tech Lead: _________________ Data: _______
- [ ] Security Specialist: _________________ Data: _______

---

## üìù **Notas Adicionais**

### **Observa√ß√µes**
- [Adicionar observa√ß√µes espec√≠ficas do componente]

### **Pr√≥ximos Passos**
- [Definir pr√≥ximos passos ap√≥s certifica√ß√£o]

### **Revis√µes Futuras**
- **Pr√≥xima Revis√£o:** [Data + 3 meses]
- **Respons√°vel:** [Nome do respons√°vel]

---

**Status:** üîÑ **EM DESENVOLVIMENTO**  
**√öltima Atualiza√ß√£o:** ${CURRENT_DATE}  
**Pr√≥xima Revis√£o:** [Data + 3 meses]
EOF

log_success "Certifica√ß√£o gerada com sucesso: ${OUTPUT_FILE}"
log_info "Pr√≥ximos passos:"
log_info "1. Revisar e personalizar o conte√∫do da certifica√ß√£o"
log_info "2. Implementar os controles de seguran√ßa listados"
log_info "3. Executar os testes de seguran√ßa"
log_info "4. Obter aprova√ß√£o dos respons√°veis"
log_info "5. Atualizar o status para 'CERTIFICADO'"

log_warning "IMPORTANTE: Esta √© uma certifica√ß√£o em desenvolvimento."
log_warning "Complete todos os itens do checklist antes de considerar o componente certificado."
